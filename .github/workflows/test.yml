name: test

on:
  # Every push onto the main branch triggers a retest.
  push:
    branches:
      - master
  # All pull_requests trigger a retest.
  pull_request:

jobs:

  mac:
    runs-on: macos-${{ matrix.os }}
    name: '🍏 macos ${{ matrix.os }}'
    strategy:
      fail-fast: false
      matrix:
        os: [
          '10.15'
        ]
    env:
      CCACHE_DIR: /Users/runner/ccache
    steps:

    - uses: actions/checkout@v2

    - name: Install dependencies
      run: |
        brew install bison

    - name: ccache for pull request
      uses: actions/cache@v2
      with:
        path: ${{ env.CCACHE_DIR }}
        key: ccache-mac-${{ matrix.os }}-${{ github.sha }}
        restore-keys: |
          ccache-mac-${{ matrix.os }}-

    - name: ccache
      run: |
        mkdir -p ${CCACHE_DIR}
        brew install ccache
        ccache -M 500M
        ccache -z

    - name: Build, check and install
      run: |
        export PATH="/usr/local/opt/ccache/libexec:/usr/local/opt/bison/bin:$PATH"
        autoconf
        ./configure
        make check
        sudo make install
        ccache -s

    - name: Test
      run: ./.github/test.sh


  lin:
    runs-on: ubuntu-${{ matrix.os }}
    name: '🐧 Ubuntu ${{ matrix.os }}'
    strategy:
      fail-fast: false
      matrix:
        os: [
          '18.04',
          '20.04'
        ]
    env:
      CCACHE_DIR: /home/runner/.ccache
    steps:

    - uses: actions/checkout@v2

    - name: Install dependencies
      run: |
        sudo apt update -qq
        sudo apt install -y make g++ git bison flex gperf libreadline-dev autoconf ccache

    - name: ccache for pull request
      uses: actions/cache@v2
      with:
        path: ${{ env.CCACHE_DIR }}
        key: ccache-lin-${{ matrix.os }}-${{ github.sha }}
        restore-keys: |
          ccache-lin-${{ matrix.os }}-

    - name: Build, check and install
      run: |
        echo "::group::ccache_setup"
        ccache -M 500M
        export PATH="/usr/lib/ccache:$PATH"
        ccache -z
        echo "::endgroup::"
        autoconf
        ./configure
        make check
        sudo make install
        ccache -s

    - name: Test
      run: ./.github/test.sh


  win:
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        include: [
          { msystem: MINGW64, arch: x86_64 },
          { msystem: MINGW32, arch: i686 }
        ]
    name: 🟪 ${{ matrix.msystem}} · ${{ matrix.arch }}
    defaults:
      run:
        shell: msys2 {0}
    env:
      MINGW_INSTALLS: ${{ matrix.msystem }}
    steps:

    - run: git config --global core.autocrlf input
      shell: bash

    - uses: actions/checkout@v2

    - uses: msys2/setup-msys2@v2
      with:
        msystem: ${{ matrix.msystem }}
        update: true
        install: >
          git
          base-devel
          mingw-w64-${{ matrix.arch }}-toolchain
          mingw-w64-${{ matrix.arch }}-ccache


    - name: Build and check
      run: |
        pwd
        ls -la /${{ matrix.msystem }}/bin/ccac*
        ls -la /${{ matrix.msystem }}/lib/ccache/
        ls -la /${{ matrix.msystem }}/lib/ccache/bin/
        mkdir -p /d/a/ccache
        mkdir -p /d/a/ccachetmp
        ls -la /d/a/
        ls -la /d/a/iverilog
        ls -la "D:/a/"
        ls -la "D:/a/iverilog"
        export CCACHE_DIR="/d/a/ccache"
        export CCACHE_TEMPDIR="/d/a/ccachetmp"
        echo "# whereis g++" && whereis g++
        echo "# whereis g++" && whereis g++
        echo "# whereis ccache" && whereis ccache
        echo "# g++ -v" && g++ -v
        echo "# /MINGW64/lib/ccache/bin/g++ -v" && /MINGW64/lib/ccache/bin/g++ -v || echo "# (/MINGW64/lib/ccache/bin/g++ -v) - FAIL"
        echo "# ccache g++ -v" && ccache g++ -v || echo "# (ccache g++ -v) - FAIL"
        echo "# ccache /${{ matrix.msystem }}/bin/g++ -v" && ccache /${{ matrix.msystem }}/bin/g++ -v || echo "# (ccache /${{ matrix.msystem }}/bin/g++ -v) - FAIL"
        echo "ls -la /${{ matrix.msystem }}/bin/g++" && ls -la /${{ matrix.msystem }}/bin/g++
        echo "::group::env"
        env
        echo "::endgroup::"
        ccache -V
        ccache -p
        ccache --verbose -s
        cd msys2
        pwd
        ls -la
        echo "::group::makepkg"
        makepkg-mingw --noconfirm --noprogressbar -sCLf
        echo "::endgroup::"
        ccache --verbose -s
        echo "::group::env"
        env
        echo "::endgroup::"
        cat /${{ matrix.msystem }}/lib/ccache/bin/g++

    - name: Install
      run: pacman -U --noconfirm msys2/*.zst

    - name: Test
      run: ./.github/test.sh

    - uses: actions/upload-artifact@v2
      with:
        name: ${{ matrix.msystem }}-${{ matrix.arch }}
        path: msys2/*.zst
